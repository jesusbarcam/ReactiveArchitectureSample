{"version":3,"file":"/Users/Rawdog/Developer/Curses/AngularUniversity/Angular NgRx Store Reactive Architecture/Repository/ReactiveArchitectureSample/src/server/persistence/findDbThreadsPerUser.ts","sources":["/Users/Rawdog/Developer/Curses/AngularUniversity/Angular NgRx Store Reactive Architecture/Repository/ReactiveArchitectureSample/src/server/persistence/findDbThreadsPerUser.ts"],"names":[],"mappings":";;AAGA,sCAAqC;AACrC,0BAA4B;AAE5B,8BAAqC,aAAoB;IAErD,IAAM,UAAU,GAAa,CAAC,CAAC,MAAM,CAAS,mBAAS,CAAC,CAAC;IAGzD,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,UAAA,MAAM;QAC9B,OAAA,CAAC,CAAC,QAAQ,CAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,aAAa,CAAC,QAAQ,EAAE,CAAE;IAAnE,CAAmE,CACtE,CAAA;AAEL,CAAC;AATD,oDASC","sourcesContent":["\n\nimport {Thread} from \"../../../shared/model/thread\";\nimport {dbThreads} from \"../db-data\";\nimport * as _ from 'lodash';\n\nexport function findDbThreadsPerUser(participantId:number) {\n\n    const allThreads: Thread[] = _.values<Thread>(dbThreads);\n\n\n    return _.filter(allThreads, thread =>\n        _.includes( _.keys(thread.participants), participantId.toString() )\n    )\n\n}"]}